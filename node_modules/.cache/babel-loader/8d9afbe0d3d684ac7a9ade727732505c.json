{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\beher\\\\Downloads\\\\Complete Web Development Course\\\\React_NotesApp2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\Users\\\\beher\\\\Downloads\\\\Complete Web Development Course\\\\React_NotesApp2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\beher\\\\Downloads\\\\Complete Web Development Course\\\\React_NotesApp2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\beher\\\\Downloads\\\\Complete Web Development Course\\\\React_NotesApp2\\\\src\\\\components\\\\InputArea2.jsx\";\nimport React from \"react\";\nimport AddIcon from '@material-ui/icons/Add';\nimport Fab from '@material-ui/core/Fab';\nimport Zoom from '@material-ui/core/Zoom';\n\nfunction InputArea(props) {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isExpanded = _React$useState2[0],\n      setExpanded = _React$useState2[1];\n\n  var _React$useState3 = React.useState({\n    title: \"\",\n    content: \"\"\n  }),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      note = _React$useState4[0],\n      setNote = _React$useState4[1]; // function active(){\n  //     isExpanded ? note.title!=0 : null;\n  // }\n\n\n  function handleChange(event) {\n    var _event$target = event.target,\n        name = _event$target.name,\n        value = _event$target.value;\n    setNote(function (prevNote) {\n      return _objectSpread(_objectSpread({}, prevNote), {}, _defineProperty({}, name, value));\n    });\n  }\n\n  function finalSubmit(event) {\n    props.onAdd(note); // This will call onAdd in the App.jsx. Then the onAdd contains addNote with \n    // it so it will call addNote function. \n    // Here we are passing the new note back to the app.\n\n    setNote({\n      title: \"\",\n      content: \"\"\n    }); // When we click on the add button it refreshes the page that's why we will\n    // use prevent.Default() which will prevent it from being refreshed.\n\n    event.preventDefault();\n  }\n\n  function expand() {\n    setExpanded(true);\n  } // What happens is by default the isExpand is false so the input title and the button will not show up\n  // but when we click on the text area there is a onClick function which calls the expand() function \n  // and the isExpand gets true by which the input title gets true and shows up and the button also\n  // gets true and shows up. \n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"create-note\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, isExpanded ? /*#__PURE__*/React.createElement(\"input\", {\n    name: \"title\",\n    value: note.title,\n    onChange: handleChange,\n    placeholder: \"Title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }) : null, /*#__PURE__*/React.createElement(\"textarea\", {\n    name: \"content\",\n    value: note.content,\n    onClick: expand,\n    onChange: handleChange,\n    placeholder: isExpanded ? \"Start Typing\" : \"Take A Note\",\n    rows: isExpanded ? 3 : 1 // It means if the isExpanded is true it'll show 3 rows and if false it'll show only 1 row.\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Zoom, {\n    in: isExpanded ? note.content != 0 : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Fab, {\n    onClick: finalSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 44\n    }\n  })))));\n}\n\nexport default InputArea;","map":{"version":3,"names":["React","AddIcon","Fab","Zoom","InputArea","props","useState","isExpanded","setExpanded","title","content","note","setNote","handleChange","event","target","name","value","prevNote","finalSubmit","onAdd","preventDefault","expand"],"sources":["C:/Users/beher/Downloads/Complete Web Development Course/React_NotesApp2/src/components/InputArea2.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Zoom from '@material-ui/core/Zoom';\r\n\r\nfunction InputArea(props) {\r\n\r\n    const [isExpanded, setExpanded] = React.useState(false);\r\n\r\n    const [note, setNote] = React.useState({\r\n        title: \"\",\r\n        content: \"\"\r\n    })\r\n\r\n    // function active(){\r\n    //     isExpanded ? note.title!=0 : null;\r\n    // }\r\n    \r\n    function handleChange(event){\r\n        const {name, value} = event.target;\r\n\r\n        setNote(prevNote => {\r\n            return {\r\n                ...prevNote,\r\n                [name]: value\r\n                // This will behave as key and value of an object\r\n            };\r\n        });\r\n    }\r\n\r\n    function finalSubmit(event){\r\n        props.onAdd(note);\r\n        // This will call onAdd in the App.jsx. Then the onAdd contains addNote with \r\n        // it so it will call addNote function. \r\n        // Here we are passing the new note back to the app.\r\n        setNote({\r\n            title: \"\",\r\n            content: \"\",\r\n        });\r\n        // When we click on the add button it refreshes the page that's why we will\r\n        // use prevent.Default() which will prevent it from being refreshed.\r\n        event.preventDefault();\r\n    }\r\n\r\n    function expand(){\r\n        setExpanded(true);\r\n    }\r\n    // What happens is by default the isExpand is false so the input title and the button will not show up\r\n    // but when we click on the text area there is a onClick function which calls the expand() function \r\n    // and the isExpand gets true by which the input title gets true and shows up and the button also\r\n    // gets true and shows up. \r\n\r\n    return (\r\n        <div>\r\n            <form className=\"create-note\">\r\n\r\n            { isExpanded ? \r\n                <input\r\n                name=\"title\"\r\n                value={note.title} \r\n                onChange={handleChange} \r\n                placeholder=\"Title\" \r\n                /> : null }\r\n        {/* It means if isExpanded is true the input will show else it'll not show up */}\r\n\r\n\r\n                <textarea \r\n                name=\"content\" \r\n                value={note.content} \r\n                onClick={expand}\r\n                onChange={handleChange} \r\n                placeholder={isExpanded ? \"Start Typing\" : \"Take A Note\"} \r\n                rows={isExpanded ? 3 : 1}\r\n                // It means if the isExpanded is true it'll show 3 rows and if false it'll show only 1 row.\r\n                />\r\n\r\n                <Zoom in={isExpanded ? note.content!=0 : null}>\r\n                {/* It means if isExpanded is true the Add button will show. */}\r\n                <Fab onClick={finalSubmit}><AddIcon /></Fab>\r\n                </Zoom>\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InputArea;"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;EAEtB,sBAAkCL,KAAK,CAACM,QAAN,CAAe,KAAf,CAAlC;EAAA;EAAA,IAAOC,UAAP;EAAA,IAAmBC,WAAnB;;EAEA,uBAAwBR,KAAK,CAACM,QAAN,CAAe;IACnCG,KAAK,EAAE,EAD4B;IAEnCC,OAAO,EAAE;EAF0B,CAAf,CAAxB;EAAA;EAAA,IAAOC,IAAP;EAAA,IAAaC,OAAb,uBAJsB,CAStB;EACA;EACA;;;EAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA4B;IACxB,oBAAsBA,KAAK,CAACC,MAA5B;IAAA,IAAOC,IAAP,iBAAOA,IAAP;IAAA,IAAaC,KAAb,iBAAaA,KAAb;IAEAL,OAAO,CAAC,UAAAM,QAAQ,EAAI;MAChB,uCACOA,QADP,2BAEKF,IAFL,EAEYC,KAFZ;IAKH,CANM,CAAP;EAOH;;EAED,SAASE,WAAT,CAAqBL,KAArB,EAA2B;IACvBT,KAAK,CAACe,KAAN,CAAYT,IAAZ,EADuB,CAEvB;IACA;IACA;;IACAC,OAAO,CAAC;MACJH,KAAK,EAAE,EADH;MAEJC,OAAO,EAAE;IAFL,CAAD,CAAP,CALuB,CASvB;IACA;;IACAI,KAAK,CAACO,cAAN;EACH;;EAED,SAASC,MAAT,GAAiB;IACbd,WAAW,CAAC,IAAD,CAAX;EACH,CAzCqB,CA0CtB;EACA;EACA;EACA;;;EAEA,oBACI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAM,SAAS,EAAC,aAAhB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAEED,UAAU,gBACR;IACA,IAAI,EAAC,OADL;IAEA,KAAK,EAAEI,IAAI,CAACF,KAFZ;IAGA,QAAQ,EAAEI,YAHV;IAIA,WAAW,EAAC,OAJZ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADQ,GAMH,IART,eAYI;IACA,IAAI,EAAC,SADL;IAEA,KAAK,EAAEF,IAAI,CAACD,OAFZ;IAGA,OAAO,EAAEY,MAHT;IAIA,QAAQ,EAAET,YAJV;IAKA,WAAW,EAAEN,UAAU,GAAG,cAAH,GAAoB,aAL3C;IAMA,IAAI,EAAEA,UAAU,GAAG,CAAH,GAAO,CANvB,CAOA;IAPA;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAZJ,eAsBI,oBAAC,IAAD;IAAM,EAAE,EAAEA,UAAU,GAAGI,IAAI,CAACD,OAAL,IAAc,CAAjB,GAAqB,IAAzC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAEA,oBAAC,GAAD;IAAK,OAAO,EAAES,WAAd;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAA2B,oBAAC,OAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAA3B,CAFA,CAtBJ,CADJ,CADJ;AAgCH;;AAED,eAAef,SAAf"},"metadata":{},"sourceType":"module"}