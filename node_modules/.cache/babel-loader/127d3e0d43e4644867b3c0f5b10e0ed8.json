{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\beher\\\\Downloads\\\\Complete Web Development Course\\\\React_NotesApp2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\Users\\\\beher\\\\Downloads\\\\Complete Web Development Course\\\\React_NotesApp2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\beher\\\\Downloads\\\\Complete Web Development Course\\\\React_NotesApp2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\beher\\\\Downloads\\\\Complete Web Development Course\\\\React_NotesApp2\\\\src\\\\components\\\\InputArea2.jsx\";\nimport React from \"react\";\n\nfunction InputArea(props) {\n  var _React$useState = React.useState({\n    title: \"\",\n    content: \"\"\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      note = _React$useState2[0],\n      setNote = _React$useState2[1];\n\n  function handleChange(event) {\n    var _event$target = event.target,\n        name = _event$target.name,\n        value = _event$target.value;\n    setNote(function (prevNote) {\n      return _objectSpread(_objectSpread({}, prevNote), {}, _defineProperty({}, name, value));\n    });\n  }\n\n  function finalSubmit(event) {\n    props.onAdd(note); // This will call onAdd in the App.jsx. Then the onAdd contains addNote with \n    // it so it will call addNote function. \n    // Here we are passing the new note back to the app.\n\n    setNote({\n      title: \"\",\n      content: \"\"\n    }); // When we click on the add button it refreshes the page that's why we will\n    // use prevent.Default() which will prevent it from being refreshed.\n\n    event.preventDefault();\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"create-note\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"title\",\n    value: note.title,\n    onChange: handleChange,\n    placeholder: \"Title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    name: \"content\",\n    value: note.content,\n    onChange: handleChange,\n    placeholder: \"Start Typing...\",\n    rows: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: finalSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, \" Add \")));\n}\n\nexport default InputArea;","map":{"version":3,"names":["React","InputArea","props","useState","title","content","note","setNote","handleChange","event","target","name","value","prevNote","finalSubmit","onAdd","preventDefault"],"sources":["C:/Users/beher/Downloads/Complete Web Development Course/React_NotesApp2/src/components/InputArea2.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\nfunction InputArea(props) {\r\n\r\n    const [note, setNote] = React.useState({\r\n        title: \"\",\r\n        content: \"\"\r\n    })\r\n    \r\n\r\n    function handleChange(event){\r\n        const {name, value} = event.target;\r\n\r\n        setNote(prevNote => {\r\n            return {\r\n                ...prevNote,\r\n                [name]: value\r\n                // This will behave as key and value of an object\r\n            };\r\n        });\r\n    }\r\n\r\n    function finalSubmit(event){\r\n        props.onAdd(note);\r\n        // This will call onAdd in the App.jsx. Then the onAdd contains addNote with \r\n        // it so it will call addNote function. \r\n        // Here we are passing the new note back to the app.\r\n        setNote({\r\n            title: \"\",\r\n            content: \"\",\r\n        });\r\n        // When we click on the add button it refreshes the page that's why we will\r\n        // use prevent.Default() which will prevent it from being refreshed.\r\n        event.preventDefault();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form className=\"create-note\">\r\n                <input name=\"title\" value={note.title} onChange={handleChange} placeholder=\"Title\" />\r\n                <textarea name=\"content\" value={note.content} onChange={handleChange} placeholder=\"Start Typing...\" rows=\"3\"/>\r\n                <button onClick={finalSubmit}> Add </button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InputArea;"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;EAEtB,sBAAwBF,KAAK,CAACG,QAAN,CAAe;IACnCC,KAAK,EAAE,EAD4B;IAEnCC,OAAO,EAAE;EAF0B,CAAf,CAAxB;EAAA;EAAA,IAAOC,IAAP;EAAA,IAAaC,OAAb;;EAMA,SAASC,YAAT,CAAsBC,KAAtB,EAA4B;IACxB,oBAAsBA,KAAK,CAACC,MAA5B;IAAA,IAAOC,IAAP,iBAAOA,IAAP;IAAA,IAAaC,KAAb,iBAAaA,KAAb;IAEAL,OAAO,CAAC,UAAAM,QAAQ,EAAI;MAChB,uCACOA,QADP,2BAEKF,IAFL,EAEYC,KAFZ;IAKH,CANM,CAAP;EAOH;;EAED,SAASE,WAAT,CAAqBL,KAArB,EAA2B;IACvBP,KAAK,CAACa,KAAN,CAAYT,IAAZ,EADuB,CAEvB;IACA;IACA;;IACAC,OAAO,CAAC;MACJH,KAAK,EAAE,EADH;MAEJC,OAAO,EAAE;IAFL,CAAD,CAAP,CALuB,CASvB;IACA;;IACAI,KAAK,CAACO,cAAN;EACH;;EAED,oBACI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAM,SAAS,EAAC,aAAhB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAO,IAAI,EAAC,OAAZ;IAAoB,KAAK,EAAEV,IAAI,CAACF,KAAhC;IAAuC,QAAQ,EAAEI,YAAjD;IAA+D,WAAW,EAAC,OAA3E;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADJ,eAEI;IAAU,IAAI,EAAC,SAAf;IAAyB,KAAK,EAAEF,IAAI,CAACD,OAArC;IAA8C,QAAQ,EAAEG,YAAxD;IAAsE,WAAW,EAAC,iBAAlF;IAAoG,IAAI,EAAC,GAAzG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFJ,eAGI;IAAQ,OAAO,EAAEM,WAAjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,WAHJ,CADJ,CADJ;AASH;;AAED,eAAeb,SAAf"},"metadata":{},"sourceType":"module"}